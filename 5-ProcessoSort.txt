#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <time.h>
#define TAM 20

int main (void) {
setlocale(LC_ALL,"Portuguese");
pid_t z;
int i, aux, cont;
int num[TAM];
z = fork();

if (z!=0){
 printf("\nPID do Pai: %d\n", getpid());
 exit(0);
}
else {
 printf("\nPID do filho: %d e PPID: %d\n", getpid(), getppid());
 printf("Ordenação do vetor dentro do processo filho: \n");
 srand(time(NULL));
      for(i = 0; i < TAM; i++)
      num[i] = rand() % TAM;

      printf("Vetor Original:\n");
      for(i = 0; i < TAM; i++)
	printf("%d ", num[i]);
	printf("\n");

// Algoritmo de ordenação Bubblesort:
 for (cont = 1; cont < TAM; cont++) {
   for (i = 0; i < TAM - 1; i++) {
     if (num[i] > num[i + 1]) {
       aux = num[i];
       num[i] = num[i + 1];
       num[i + 1] = aux;
     }
   }
 }
printf("Vetor Ordenado:\n");
for (i = 0; i < TAM; i++) {
 printf("%d ", num[i]);
}

printf ("\nFim do Processo.\n"); 

}
return 0;
}
